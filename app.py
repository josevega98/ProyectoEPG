import streamlit as st
import pandas as pd
from utils import load_model, preprocess_data, predict_anomalies
st.set_page_config(page_icon="游뱌", page_title="Trabajo Final")
st.image("logob_m_EPG.png", width=200)
st.title("Detecci칩n de anomal칤as para clientes en el sector financiero")
col1, col2 = st.columns([5, 5])

with col1:
    st.subheader("Algoritmo Isolation Forest para Detecci칩n de Fraude")
    st.info("""
    El algoritmo **Isolation Forest** es un m칠todo de aprendizaje autom치tico utilizado para la detecci칩n de anomal칤as.
    Se basa en el principio de que los puntos de datos an칩malos (en este caso, posibles casos de fraude) son m치s f치ciles de 
    "aislar" o separar que los puntos normales. En el contexto financiero, Isolation Forest ayuda a identificar patrones 
    sospechosos en las cuentas de los clientes, lo que puede indicar actividades fraudulentas.
    
    Este modelo divide los datos en 치rboles de aislamiento y mide la facilidad con la que un punto se a칤sla. Si un punto es 
    aislado r치pidamente, se clasifica como una posible anomal칤a, permitiendo as칤 una detecci칩n temprana de posibles fraudes 
    en las cuentas de los clientes.
    """)
with col2:
    uploaded_model = st.file_uploader(
        "Sube un archivo .pkl para el modelo de an치lisis", type='pkl',
        key="1"
    )

    if uploaded_model is not None:

        model = load_model(uploaded_model)
        

        data_file = st.file_uploader("Sube un archivo .csv de datos de transacciones", type="csv", key="2")
        
        if data_file is not None:
    
            data = pd.read_csv(data_file)
            st.write("Datos cargados con 칠xito:", data.head())
            
    
            data_scaled = preprocess_data(data)
            anomalies = predict_anomalies(model, data_scaled)
            
    
            st.write("Resultados de la detecci칩n de fraude:")
            data['EsFraude'] = anomalies
            st.write(data[['EsFraude']])
            st.info(f"Total de transacciones an칩malas detectadas: {sum(anomalies)}")
    else:
        st.info("Por favor, sube el modelo en formato .pkl.")
